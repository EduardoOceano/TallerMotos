@model IEnumerable<TallerMotos.Models.Productos>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title></title>
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">
    <link href="~/css/styles.css" rel="stylesheet" />
    <script>
         function llenarCarrito(tipo, precio, stock) {
            // Variables
            const baseDeDatos = [
                {
                    id: '@Html.DisplayNameFor(model => model.id)',
                    tipo:  tipo,
                    precio: precio,
                    stock: stock

                }
            ];

            let carrito = [];
            let total = 0;
            const DOMitems = document.querySelector('#items');
            const DOMcarrito = document.querySelector('#carrito');
            const DOMtotal = document.querySelector('#total');
            const DOMbotonVaciar = document.querySelector('#boton-vaciar');

            // Funciones

            /**
            * Dibuja todos los productos a partir de la base de datos. No confundir con el carrito
            */
            function renderizarProductos() {
                baseDeDatos.forEach((info) => {
                    // Estructura
                    const miNodo = document.createElement('div');
                    miNodo.classList.add('card', 'col-sm-4');
                    // Body
                    const miNodoCardBody = document.createElement('div');
                    miNodoCardBody.classList.add('card-body');
                    // Titulo
                    const miNodoTitle = document.createElement('h5');
                    miNodoTitle.classList.add('card-title');
                    miNodoTitle.textContent = info.stock;


                    // Precio
                    const miNodoPrecio = document.createElement('p');
                    miNodoPrecio.classList.add('card-text');
                    miNodoPrecio.textContent = info.precio + '€';
                    // Boton
                    const miNodoBoton = document.createElement('button');
                    miNodoBoton.classList.add('btn', 'btn-primary');
                    miNodoBoton.textContent = '+';
                    miNodoBoton.setAttribute('marcador', info.id);
                    miNodoBoton.addEventListener('click', anyadirProductoAlCarrito);
                    // Insertamos
                    miNodoCardBody.appendChild(miNodoImagen);
                    miNodoCardBody.appendChild(miNodoTitle);
                    miNodoCardBody.appendChild(miNodoPrecio);
                    miNodoCardBody.appendChild(miNodoBoton);
                    miNodo.appendChild(miNodoCardBody);
                    DOMitems.appendChild(miNodo);
                });
            }

            /**
            * Evento para añadir un producto al carrito de la compra
            */
            function anyadirProductoAlCarrito(evento) {
                // Anyadimos el Nodo a nuestro carrito
                carrito.push(evento.target.getAttribute('marcador'))
                // Calculo el total
                calcularTotal();
                // Actualizamos el carrito
                renderizarCarrito();

            }

            /**
            * Dibuja todos los productos guardados en el carrito
            */
            function renderizarCarrito() {
                // Vaciamos todo el html
                DOMcarrito.textContent = '';
                // Quitamos los duplicados
                const carritoSinDuplicados = [...new Set(carrito)];
                // Generamos los Nodos a partir de carrito
                carritoSinDuplicados.forEach((item) => {
                    // Obtenemos el item que necesitamos de la variable base de datos
                    const miItem = baseDeDatos.filter((itemBaseDatos) => {
                        // ¿Coincide las id? Solo puede existir un caso
                        return itemBaseDatos.id === parseInt(item);
                    });
                    // Cuenta el número de veces que se repite el producto
                    const numeroUnidadesItem = carrito.reduce((total, itemId) => {
                        // ¿Coincide las id? Incremento el contador, en caso contrario no mantengo
                        return itemId === item ? total += 1 : total;
                    }, 0);
                    // Creamos el nodo del item del carrito
                    const miNodo = document.createElement('li');
                    miNodo.classList.add('list-group-item', 'text-right', 'mx-2');
                    miNodo.textContent = `${numeroUnidadesItem} x ${miItem[0].stock} - ${miItem[0].precio}€`;
                    // Boton de borrar
                    const miBoton = document.createElement('button');
                    miBoton.classList.add('btn', 'btn-danger', 'mx-5');
                    miBoton.textContent = 'X';
                    miBoton.style.marginLeft = '1rem';
                    miBoton.dataset.item = item;
                    miBoton.addEventListener('click', borrarItemCarrito);
                    // Mezclamos nodos
                    miNodo.appendChild(miBoton);
                    DOMcarrito.appendChild(miNodo);
                });
            }

            /**
            * Evento para borrar un elemento del carrito
            */
            function borrarItemCarrito(evento) {
                // Obtenemos el producto ID que hay en el boton pulsado
                const id = evento.target.dataset.item;
                // Borramos todos los productos
                carrito = carrito.filter((carritoId) => {
                    return carritoId !== id;
                });
                // volvemos a renderizar
                renderizarCarrito();
                // Calculamos de nuevo el precio
                calcularTotal();
            }

            /**
            * Calcula el precio total teniendo en cuenta los productos repetidos
            */
            function calcularTotal() {
                // Limpiamos precio anterior
                total = 0;
                // Recorremos el array del carrito
                carrito.forEach((item) => {
                    // De cada elemento obtenemos su precio
                    const miItem = baseDeDatos.filter((itemBaseDatos) => {
                        return itemBaseDatos.id === parseInt(item);
                    });
                    total = total + miItem[0].precio;
                });
                // Renderizamos el precio en el HTML
                DOMtotal.textContent = total.toFixed(2);
            }

            /**
            * Varia el carrito y vuelve a dibujarlo
            */
            function vaciarCarrito() {
                // Limpiamos los productos guardados
                carrito = [];
                // Renderizamos los cambios
                renderizarCarrito();
                calcularTotal();
            }

            // Eventos
            DOMbotonVaciar.addEventListener('click', vaciarCarrito);

            // Inicio
            renderizarProductos();


        }
    </script>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top" id="mainNav" style="background-color:#333">
        <div class="container">
            <a class="navbar-brand js-scroll-trigger" asp-area="" asp-controller="Home" asp-action="Index">Taller FUAAH</a>
            <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                Menu
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto" id="menu">
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" asp-area="" asp-controller="Motos" asp-action="Index">Motos</a>
                        <ul class="nav-item submenu js-scroll-trigger">
                            <li class="nav-item js-scroll-trigger">Kawasaki</li>
                            <li class="nav-item js-scroll-trigger">Honda</li>
                            <li class="nav-item js-scroll-trigger">Suzuki</li>
                            <li class="nav-item js-scroll-trigger">Husqvarna</li>
                            <li class="nav-item js-scroll-trigger">KTM</li>
                            <li class="nav-item js-scroll-trigger">Derbi</li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" asp-area="" asp-controller="Productos" asp-action="Index">Productos</a>
                        <ul class="nav-item submenu js-scroll-trigger">
                            <li class="nav-item js-scroll-trigger">Motor</li>
                            <li class="nav-item js-scroll-trigger">Frenos</li>
                            <li class="nav-item js-scroll-trigger">Neumaticos</li>
                            <li class="nav-item js-scroll-trigger">Embrague</li>
                            <li class="nav-item js-scroll-trigger">Focos</li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" asp-area="" asp-controller="Talleres" asp-action="Index">Talleres</a>
                        <ul class="nav-item submenu">
                            <li class="nav-item js-scroll-trigger">Casco</li>
                            <li class="nav-item js-scroll-trigger">Guantes</li>
                            <li class="nav-item js-scroll-trigger">Botas</li>
                            <li class="nav-item js-scroll-trigger">Protección</li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" asp-area="" asp-controller="Talleres" asp-action="Index">Talleres</a>
                        <ul class="nav-item submenu">
                            <li class="nav-item js-scroll-trigger">Zaragoza</li>
                            <li class="nav-item js-scroll-trigger">Madrid</li>
                            <li class="nav-item js-scroll-trigger">Barcelona</li>
                            <li class="nav-item js-scroll-trigger">Valencia</li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" asp-area="" asp-controller="Servicios" asp-action="Index">Servicios</a>
                        <ul class="nav-item submenu">
                            <li class="nav-item js-scroll-trigger">Arreglo de moto</li>
                            <li class="nav-item js-scroll-trigger">Cambio de ruedas</li>
                            <li class="nav-item js-scroll-trigger">Puesta a punto</li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" asp-area="" asp-controller="Facturas" asp-action="Index">Facturas</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <br />
    <br />
    <br />
    <br />
    <br />
    <div class="container">
        <div class="row">
            <!-- Elementos generados a partir del JSON -->
            <main id="items" class="col-sm-8 row"></main>
            <!-- Carrito -->
            <aside class="col-sm-4">
                <h2>Carrito</h2>
                <!-- Elementos del carrito -->
                <ul id="carrito" class="list-group"></ul>
                <hr>
                <!-- Precio total -->
                <p class="text-right">Total: <span id="total"></span>&euro;</p>
                <button id="boton-vaciar" class="btn btn-danger">Vaciar</button>

            </aside>
        </div>
    </div>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">

        <div class="container">
            &copy; 2021 - TallerMotos - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
